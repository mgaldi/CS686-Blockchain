{"version":3,"sources":["Blocks.js","App.js","reportWebVitals.js","index.js"],"names":["ToggleList","ColumnToggle","SearchBar","Search","ClearSearchButton","Blocks","CSVExport","ExportCSVButton","state","title","author","pages","year","blocks","dataField","text","style","overflowWrap","sort","formatter","cell","map","book","index","className","Title","Author","Pages","Year","remote","bind","newBook","doQuery","handleInputChange","remoteObj","insertRow","event","name","target","this","setState","type","parseInt","value","a","preventDefault","data","console","log","JSON","stringify","fetch","method","headers","body","finally","response","ports","Array","json","i","length","obj","push","ProcessNr","rootHashes","heights","ok","req","RootHash","Height","resultOk","error","expandRow","renderer","row","ParentHash","Form","onSubmit","Group","controlId","Row","Col","Label","Control","placeholder","onChange","Button","variant","keyField","columns","search","bootstrap4","columnToggle","props","lg","searchProps","columnToggleProps","baseProps","Component","App","user","notification","isActive","permanentNotification","message","String","notificationArea","action","dismissAfter","onDismiss","onClick","Container","fluid","xs","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddc6409f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Row, Col, Form, FormLabel, Container } from 'react-bootstrap';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css';\nimport ToolkitProvider, { ColumnToggle, Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nconst { ToggleList } = ColumnToggle;\nconst { SearchBar, ClearSearchButton } = Search;\nconst { ExportCSVButton } = CSVExport;\nclass Blocks extends Component {\n    constructor() {\n        super()\n        this.state = {\n            title : '',\n            author:'',\n            pages: '',\n            year: '',\n            blocks: [],\n            blocks: [],\n            columns: [{\n                dataField: 'Height',\n                text: 'height',\n                style: { overflowWrap: \"break-word\" },\n                sort: true\n            }, {\n                dataField: 'Timestamp',\n                text: 'Timestamp',\n                style: { overflowWrap: \"break-word\" },\n                sort: true\n            }, {\n                dataField: 'ParentHash',\n                text: 'Parent Hash',\n                style: { overflowWrap: \"break-word\" },\n                sort: false\n            }, {\n                dataField: 'RootHash',\n                text: 'RootHash',\n                style: { overflowWrap: \"break-word\" },\n                sort: false\n            }, {\n                dataField: 'Data',\n                text: 'Data',\n                style: { overflowWrap: \"break-word\" },\n                sort: false,\n                formatter: (cell) => {\n                \n                    \n                        return <>{\n                            <div> \n                            {cell && cell.map((book, index) => \n                            <div>\n                                <div className=\"text-left\">\n                                    <span className=\"font-weight-bold text-center\">Book {index}</span>\n                                    </div>\n                                    <div>\n                                <p><b>Title:</b> {book.Title}</p>\n                                <p><b>Author:</b> {book.Author}</p>\n                                <p><b>Pages:</b> {book.Pages}</p>\n                                <p><b>Year:</b> {book.Year}</p></div>\n                                </div>\n                                )}                            \n                \n                         </div>}</>\n                }\n            }]\n        }\n        this.title = \"\"\n        this.author = \"\"\n        this.pages = \"\"\n        this.year = \"\"\n        this.remote = this.remote.bind(this)\n        this.newBook = this.newBook.bind(this)\n        this.doQuery = this.doQuery.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this);\n\n    }\n    // this.updateData = this.updateData.bind(this)\n\n    remote(remoteObj){\n        remoteObj.insertRow = true\n        return remoteObj\n    }\n    handleInputChange(event) {\n        const name = event.target.name;\n    \n        this.setState({\n            [name]: event.target.type === 'number' ? parseInt(event.target.value) : event.target.value\n        });\n      }\n      \n   async newBook(event){\n    \n        event.preventDefault()\n\n        try {\n            let data = {\n                Title : this.state.title,\n                Author : this.state.author,\n                Pages : parseInt(this.state.pages),\n                Year: parseInt(this.state.year)\n            }\n            console.log(JSON.stringify(data))\n            let response = await fetch(\"/new\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            }).finally(response => {\n                console.log(\"Done\")\n            })\n            this.doQuery()\n\n            \n        }catch (e){\n            console.log(e)\n        }       \n    }\n\n    async doQuery(){\n        var ports= new Array()\n        try {\n            let response = await fetch(\"http://localhost:8080/validators\", {\n              method: \"GET\",\n              // headers: {\n              //   'Accept': 'application/json',\n              //   'Content-Type': 'application/json',\n              // },\n            })\n            response = await response.json()\n            for(var i = 0; i < response.length; i++) {\n                var obj = response[i]\n                ports.push((obj.ProcessNr * 4) + 46000)\n                console.log(obj.ProcessNr)\n            }\n            console.log(JSON.stringify(response))\n          } catch (e) {\n            console.log(e)\n          }\n          var data = this\n          var rootHashes = new Array()\n          var heights = new Array()\n          var ok = true\n          for(var i = 0; i < ports.length; i++){\n\n            try {\n                var req = `http://localhost:${ports[i]}/list`\n                let response = await fetch(req, {\n                  method: \"GET\",\n                })\n                data = await response.json()\n              \n                var obj = data[data.length - 1]\n                rootHashes.push(obj.RootHash)\n                heights.push(obj.Height)\n                console.log(obj.Height)\n                console.log(JSON.stringify(data))\n              } catch (e) {\n                console.log(e)\n              }\n              if(heights.length > 1){\n        \n                  if(heights[heights.length - 1] !== heights[heights.length - 2]){\n                      ok = false\n                  }\n              }\n              if(rootHashes.length > 1){\n                if(rootHashes[rootHashes.length - 1] !== rootHashes[rootHashes.length - 2]){\n                    ok = false\n                }\n            }\n\n          }\n          if(ok){\n            this.resultOk(data)\n          }\n    }\n    async componentDidMount() { \n        console.log(\"Query for blocks.\")\n        this.doQuery()\n      }\n\n      async resultOk(response) {\n        if (response.error) {\n          console.log(\"error\")\n        } else {\n          this.setState({\n            blocks: response\n          })\n        }\n      }\n    \n    render() {\n        const expandRow={\n            renderer: row => (\n            <div>\n                <p>Parent Hash: {row.ParentHash}</p>\n                <p>Root Hash: {row.RootHash}</p>\n            </div>\n            )\n        };\n\n        return (\n            <div className=\"bootstrap-table-margin fix-height mt-5\" >\n                \n                <Form onSubmit={this.newBook} className=\"mx-5\">\n                    \n                        \n                    <Form.Group controlId=\"form.Book\" className=\"text-left\">\n                    <Form.Row>\n                        \n                        <Col>\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Title\" onChange={this.handleInputChange}  name=\"title\" value={this.state.title}/>\n                            <br />\n                            <Form.Label>Author</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Author\" onChange={this.handleInputChange}  name=\"author\" value={this.state.author}/>\n                            <br />\n                        </Col>\n                        <Col>\n                            <Form.Label>Number of Pages</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Pages\" onChange={this.handleInputChange}  name=\"pages\" value={this.state.pages}/>\n                            <br />\n                            <Form.Label>Year</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Year\" onChange={this.handleInputChange}  name=\"year\" value={this.state.year}/>\n                        </Col>\n                        </Form.Row>\n\n                    </Form.Group>\n                   \n            \n                    <Button variant=\"primary\" type=\"submit\" >\n                        Submit\n                    </Button>\n                </Form>\n\n               \n                <ToolkitProvider\n                    \n                    keyField=\"Height\"\n                    data={this.state.blocks}\n                    columns={this.state.columns}\n                    search\n                    bootstrap4\n                    columnToggle    \n                \n                >\n                    {\n                        props => (\n                            <div>\n                                <Row className=\"mt-5\">\n                                    <Col lg={6}>\n                                        <SearchBar {...props.searchProps} />\n                                        <ClearSearchButton {...props.searchProps} />\n\n                                    </Col>\n                                    <Col lg={6}>\n                                        <ToggleList {...props.columnToggleProps} />\n                                    </Col>\n                                </Row>\n\n\n\n                                <hr />\n                                <BootstrapTable\n                                    expandRow={ expandRow }\n                                    {...props.baseProps}\n                                />\n                                {/* <ExportCSVButton {...props.csvProps}><Button>Export CSV!!</Button></ExportCSVButton> */}\n                            </div>\n                        )\n                    }\n\n                </ToolkitProvider>\n            </div>\n        )\n    }\n}\n\nexport default Blocks\n","// import 'bootstrap/dist/css/bootstrap-theme.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport { Notification } from 'react-notification';\n\nimport './App.css';\nimport Blocks from './Blocks.js';\n\n// const DashboardPubSub = require('./pubsub').default\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    // State initialization\n    this.state = {\n      blocks: [],\n      user: {},\n      notification: {\n        isActive: false,\n        permanentNotification: false,\n        message: String(\"\")\n      },\n    }\n  }\n\n  toggleNotification(message) {\n    this.setState({\n      notification: {\n        isActive: true,\n        permanentNotification: false,\n        message: message\n      }\n    })\n  }\n\n\n  render() {\n    const notificationArea = (\n      <div>\n        <Notification\n          isActive={this.state.notification.isActive}\n          message={this.state.notification.message || \"\"}\n          action=\"Dismiss\"\n          title=\"Error!\"\n          dismissAfter={3500}\n          onDismiss={() => this.setState({ notification: { isActive: false } })}\n          onClick={() => this.setState({ notification: { isActive: false } })}\n        />\n      </div>\n    )\n\n    return (\n      <div className=\"App\">\n        {notificationArea}\n        <Container fluid>\n          <Row >\n            <Col xs={12} md={12} lg={12}>\n              <Blocks />\n            </Col>\n          </Row>\n          </Container>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}